asset_type: Windows
confidence: medium
creation_date: '2019-12-06'
data_metadata:
  data_eventtypes:
    - wineventlog_sysmon
  data_source:
    - Windows Event Logs
  providing_technologies:
    - Microsoft Windows
description: This search detects loading of unsigned images by LSASS.
detect:
  splunk:
    correlation_rule:
      notable:
        nes_fields: dest
        rule_description: Possible attempt at credential dumping was detected on $dest$.
        rule_title: unsigned images loaded by LSASS on $dest$.
      risk:
        risk_object: dest
        risk_object_type:
          - system
        risk_score: 50
      macros:
        - sysmon
        - unsigned_image_loaded_by_LSASS_filter
      schedule:
        cron_schedule: 0 * * * *
        earliest_time: -70m@m
        latest_time: -10m@m
      search: '`sysmon` EventID=7 Image=*lsass.exe Signed=false
        | stats count min(_time) as firstTime max(_time) as lastTime by Computer, Image, ImageLoaded, Signed, SHA1
        | rename Computer as dest
        | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`
        | `unsigned_image_loaded_by_LSASS_filter`'
      suppress:
        suppress_fields: dest, ImageLoaded
        suppress_period: 86400s
eli5: This search detects unsigned images loaded by LSASS (Local Security Authrity Subsystem Service).
  Normally, LSASS only loads signed images. Therefore, it is a malicious indicator when unsigned images are loaded by LSASS.
  This can be an indicator for credential dumping using tools like Windows Credential Editor.
entities:
  - dest
how_to_implement: 'This search needs Sysmon Logs with a sysmon configuration, which includes EventCode 7 with lsass.exe. This search uses an input macro named `sysmon`. We strongly recommend that you specify your environment-specific configurations (index, source, sourcetype, etc.) for Windows Sysmon logs. Replace the macro definition with configurations for your Splunk environment. The search also uses a post-filter macro designed to filter out known false positives.'
id: 56ef054c-76ef-45f9-af4a-a634695dcd65
investigations:
  - id: 5de385bf-4f1e-404e-9b67-92d162ff8938ad
    name: Investigate Previous Unseen User
    type: splunk
  - id: 097e8030-8662-4254-a735-bf0bdda696e3
    name: Investigate Failed Logins for Multiple Destinations
    type: splunk
  - id: ed3fff45-cba6-4990-983f-6fac72bee659
    name: Investigate Pass the Hash Attempts
    type: splunk
  - id: 990007ad-d798-4b29-ab2f-f0034144c937
    name: Investigate Pass the Ticket Attempts
    type: splunk
known_false_positives: Other tools could load images into LSASS for legitimate reason.
  But enterprise tools should always use signed DLLs.
maintainers:
  - company: Splunk
    email: pbareiss@splunk.com
    name: Patrick Bareiss
mappings:
  cis20:
    - CIS 8
    - CIS 16
  kill_chain_phases:
    - Actions on Objectives
  mitre_attack:
    - Credential Access
    - Credential Dumping
  mitre_technique_id:
    - T1003
  nist:
    - DE.CM
modification_date: '2019-12-06'
name: Unsigned Image Loaded by LSASS
original_authors:
  - company: Splunk
    email: pbareiss@splunk.com
    name: Patrick Bareiss
references:
  - https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
security_domain: endpoint
spec_version: 2
type: splunk
version: "1"
