asset_type: AWS Instance
baselines:
  - id: fc0edd96-ff2b-48b0-9f1f-63da3782fd63
    name: Baseline of blocked outbound traffic from AWS
    type: splunk
confidence: medium
creation_date: '2018-04-26'
data_metadata:
  data_source:
    - AWS VPC Flow Logs
  data_sourcetypes:
    - aws:cloudwatchlogs:vpcflow
  providing_technologies:
    - AWS
description: This search will detect spike in blocked outbound network connections
  originating from within your AWS environment.  It will also update the cache file
  that factors in the latest data.
detect:
  splunk:
    correlation_rule:
      notable:
        nes_fields: src_ip
        rule_description: A spike in the blocked outbound connection is detected from
          source $src_ip$.
        rule_title: Spike in blocked outbound network connections from $src_ip$ detected.
      risk:
        risk_object: src_ip
        risk_object_type:
          - system
        risk_score: 30
      schedule:
        cron_schedule: 0 * * * *
        earliest_time: -70m@m
        latest_time: -10m@m
      search: sourcetype=aws:cloudwatchlogs:vpcflow action=blocked (src_ip=10.0.0.0/8
        OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND
        dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  [search  sourcetype=aws:cloudwatchlogs:vpcflow
        action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16)
        ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  |
        stats count as numberOfBlockedConnections by src_ip | inputlookup baseline_blocked_outbound_connections
        append=t | fields - latestCount | stats values(*) as * by src_ip | rename
        numberOfBlockedConnections as latestCount | eval newAvgBlockedConnections=avgBlockedConnections
        + (latestCount-avgBlockedConnections)/720 | eval newStdevBlockedConnections=sqrt(((pow(stdevBlockedConnections,
        2)*719 + (latestCount-newAvgBlockedConnections)*(latestCount-avgBlockedConnections))/720))
        | eval avgBlockedConnections=coalesce(newAvgBlockedConnections, avgBlockedConnections),
        stdevBlockedConnections=coalesce(newStdevBlockedConnections, stdevBlockedConnections),
        numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table
        src_ip, latestCount, numDataPoints, avgBlockedConnections, stdevBlockedConnections
        | outputlookup baseline_blocked_outbound_connections | eval dataPointThreshold
        = 5, deviationThreshold = 3 | eval isSpike=if((latestCount > avgBlockedConnections+deviationThreshold*stdevBlockedConnections)
        AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | table src_ip]
        | stats values(dest_ip) as "Blocked Destination IPs", values(interface_id)
        as "resourceId" count as numberOfBlockedConnections, dc(dest_ip) as uniqueDestConnections
        by src_ip
      suppress:
        suppress_fields: src_ip
        suppress_period: 14400s
eli5: 'This search retrieves all the VPC Flow log entries that have recorded a blocked
  outbound network connection originating from your AWS environment. Then it kicks
  off a subsearch, which looks at the same data and performs the following series
  of steps: \

  1. Counts the number of blocked outbound connections by each source IP\

  1. Loads the cache file that contains the number of data points, the count from
  the latest hour, the average blocked connections, and the standard deviation for
  each source IP.\

  1. Drops the count from the latest hour, since it is not necessary, and merges the
  rest of the data with the results of the stats command. \

  1. Renames `numberOfBlockedConnections` as `latestCount`.\

  1. Calculates the new average value for each source IP with the latest count, weighting
  the past much more heavily than the current hour. It does the same for the standard
  deviation, weighting the past more heavily than the current.\

  1. Updates the cache file with the latest results.\

  1. Sets the minimum threshold for the number of data points and sets the number
  of standard deviations away from the mean it must be to be considered a spike.\

  1. Makes a determination regarding whether or not the current count is a spike by
  checking to see if the minimum data-point threshold has been met and the count is
  a sufficient number of standard deviations away from the average.\

  1. Filters out anything that it determines is not a spike and returns the list of
  source IPs to the main search. The main search subsequently gets the list of all
  destination IPs for which the traffic was blocked, the network interface ID, the
  number of unique destination IP, and the total number of blocked connections for
  each of these source IP addresses. Finally, it looks up the average and standard
  deviation and returns both the average and the number of standard deviations the
  spike is from the average.'
entities:
  - src_ip
how_to_implement: You must install the AWS App for Splunk (version 5.1.0 or later)
  and Splunk Add-on for AWS (version 4.4.0 or later), then configure your VPC Flow
  logs. You can modify `dataPointThreshold` and `deviationThreshold` to better fit
  your environment. The `dataPointThreshold` variable is the number of data points
  required to meet the definition of "spike." The `deviationThreshold` variable is
  the number of standard deviations away from the mean that the value must be to be
  considered a spike. This search works best when you run the "Baseline of Blocked
  Outbound Connection" support search once to create a history of previously seen
  blocked outbound connections.
id: ada0f278-84a8-46w1-a3f1-w32372d4bd53
investigations:
  - id: 910e6512-edc9-4f93-ba24-5b786f47a672
    name: Get Process Responsible For The DNS Traffic
    type: splunk
  - id: 9925d08f-561e-4faa-8912-e3888a842341
    name: Get Process Information For Port Activity
    type: splunk
  - id: bc91a8cd-35e7-4bb2-6140-e756cc46fd71
    name: AWS Investigate User Activities By ARN
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd76
    name: Get Authentication Logs For Endpoint
    type: splunk
  - id: f3fb4d1c-5f33-4b01-b541-c3ah9534c241
    name: AWS Network Interface details via resourceId
    type: splunk
  - id: f3fb4d1b-5f33-4b01-b541-c7ah9534c242
    name: AWS Network ACL Details from ID
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd72
    name: Get DNS Server History for a host
    type: splunk
  - id: fdcfb369-1725-4c24-824a-22972d7f0d55
    name: Get Risk Modifiers For User
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd71
    name: Get Process Info
    type: splunk
  - id: 446ec87a-85c6-40d4-b060-bea4498281d6
    name: Get All AWS Activity From IP Address
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd73
    name: Get DNS traffic ratio
    type: splunk
  - id: 3d6c3213-5fff-4a1e-b57d-b24c262171e7
    name: Get Notable History
    type: splunk
  - id: f3fb4d1b-5f33-4b01-b541-c7af9534c242
    name: Get Notable Info
    type: splunk
  - id: fdcfb369-1725-4c24-824a-22972d7f0d65
    name: Get Risk Modifiers For Endpoint
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd74
    name: Get User Information from Identity Table
    type: splunk
known_false_positives: The false-positive rate may vary based on the values of`dataPointThreshold`
  and `deviationThreshold`. Additionally, false positives may result when AWS administrators
  roll out policies enforcing network blocks, causing sudden increases in the number
  of blocked outbound connections.
maintainers:
  - company: Splunk
    email: bpatel@splunk.com
    name: Bhavin Patel
mappings:
  cis20:
    - CIS 11
  kill_chain_phases:
    - Actions on Objectives
    - Command and Control
  mitre_attack:
    - Exfiltration
    - Command and Control
  nist:
    - DE.AE
    - DE.CM
    - PR.AC
modification_date: '2018-05-07'
name: Detect Spike in blocked Outbound Traffic from your AWS
original_authors:
  - company: Splunk
    email: bpatel@splunk.com
    name: Bhavin Patel
references: []
security_domain: network
spec_version: 2
type: splunk
version: '1.0'
