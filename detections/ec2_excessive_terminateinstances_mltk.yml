asset_type: AWS Instance
baselines:
  - id: b28ed6de-e4ba-40f7-ae0a-93a088c774ab
    name: Baseline of Excessive AWS Instances Terminated by User - MLTK
    type: splunk
confidence: medium
creation_date: '2019-11-14'
data_metadata:
  data_source:
    - AWS CloudTrail logs
  data_sourcetypes:
    - aws:cloudtrail
  providing_technologies:
    - AWS
description: This search looks for CloudTrail events where a user successfully terminates
  an abnormally high number of instances.
detect:
  splunk:
    correlation_rule:
      macros:
        - ec2_excessive_terminateinstances_mltk_input_filter
      notable:
        nes_fields: src_user
        rule_description: An abnormally high number of instances were terminated by
          a user within in a 10-minute window
        rule_title: High Number of instances terminated by $src_user$
      risk:
        risk_object: src_user
        risk_object_type:
          - user
        risk_score: 30
      schedule:
        cron_schedule: '*/10 * * * *'
        earliest_time: -70m@m
        latest_time: -10m@m
      search: >-
        sourcetype=aws:cloudtrail eventName=TerminateInstances errorCode=success `ec2_excessive_terminateinstances_mltk_input_filter`
        | bucket span=10m _time 
        | stats count as instances_terminated by _time src_user 
        | apply ec2_excessive_terminateinstances_v1 
        | rename "IsOutlier(instances_terminated)" as isOutlier 
        | where isOutlier=1
      suppress:
        suppress_fields: src_user
        suppress_period: 3600s
eli5: In this search, we query CloudTrail logs to look for events where an instance
  is successfully terminated by a particular user. Since we want to detect a high number
  of instances terminated within a short period, we create event buckets for 10-minute
  windows. We then compare the total number of instances terminated by a particular
  user against the saved baseline data in the model ec2_excessive_terminateinstances_v1.
entities:
  - src_user
how_to_implement: You must install the AWS App for Splunk (version 5.1.0 or later)
  and Splunk Add-on for AWS (version 4.4.0 or later), then configure your CloudTrail
  inputs. The threshold value should be tuned to your environment.
id: 1c02b86a-cd85-473e-a50b-014a9ac8fe3e
investigations:
  - id: bc91a8cd-35e7-4bb2-6140-e756cc46fd71
    name: AWS Activities By Source User(ARN)
    type: splunk
  - id: 0e40fe83-3edb-4d86-8206-8fed36529ca6
    name: Get EC2 Launch Details
    type: splunk
  - id: f3db4d1b-5f33-4b01-c541-c7ah9514c242
    name: Get EC2 Instance Details by instanceId
    type: splunk
  - id: 3d6c3213-5fff-4a1e-b57d-b24c262171e7
    name: Get Notable History
    type: splunk
  - id: f3fb4d1b-5f33-4b01-b541-c7af9534c242
    name: Get Notable Info
    type: splunk
  - id: bc91a8cf-35e7-4bb2-8140-e756cc06fd74
    name: Get User Information from Identity Table
    type: splunk
  - id: bc91a8cd-35e7-4bb2-6140-e756cc46fd11
    name: Investigate AWS activities via region name
    type: splunk
known_false_positives: Many service accounts configured within an AWS infrastructure
  are known to exhibit this behavior. Please adjust the threshold values and filter
  out service accounts from the output. Always verify if this search alerted on a
  human user.
maintainers:
  - company: Splunk
    email: jbrewer@splunk.com
    name: Jason Brewer
mappings:
  cis20:
    - CIS 13
  kill_chain_phases:
    - Actions on Objectives
  mitre_attack:
    - Execution
  nist:
    - DE.DP
    - DE.AE
modification_date: '2020-03-16'
name: Abnormally High AWS Instances Terminated by User - MLTK
original_authors:
  - company: Splunk
    email: jbrewer@splunk.com
    name: Jason Brewer
references: []
security_domain: network
spec_version: 2
type: splunk
version: '2.0'
