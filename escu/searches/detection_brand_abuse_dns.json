{
  "asset_type": "Endpoint",
  "channel": "ESCU",
  "confidence": "high",
  "correlation_rule": {
    "notable": {
      "nes_fields": "src, query",
      "rule_description": "The host $src$ issued a DNS request for a domain to that which you are monitoring for brand abuse.",
      "rule_title": "DNS Query Brand Abuse from $src$"
    },
    "risk": {
      "risk_object": "src",
      "risk_object_type": [
        "system"
      ],
      "risk_score": 40
    },
    "suppress": {
      "suppress_fields": "src,query",
      "suppress_period": "14400s"
    }
  },
  "creation_date": "2017-06-01",
  "data_metadata": {
    "data_models": [
      "Network_Resolution"
    ],
    "data_source": [
      "DNS"
    ],
    "providing_technologies": [
      "Splunk Stream",
      "Bro"
    ]
  },
  "eli5": "This search gathers all the answers to each system's DNS query, then filters out all queries that do not appear on the list of faux \"look-a-like\" domains that have been generated from the brand abuse domains you are monitoring.",
  "how_to_implement": "You need to ingest data from your DNS logs. Specifically you must ingest the domain that is being queried and the IP of the host originating the request. Ideally, you should also be ingesting the answer to the query and the query type. This approach allows you to also create your own localized passive DNS capability which can aid you in future investigations. You also need to have run the search \"ESCU - DNSTwist Domain Names\", which creates the permutations of the domain that will be checked for.",
  "known_false_positives": "None at this time",
  "maintainers": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "mappings": {
    "kill_chain_phases": [
      "Delivery",
      "Actions on Objectives"
    ]
  },
  "modification_date": "2017-09-23",
  "original_authors": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "scheduling": {
    "cron_schedule": "0 * * * *",
    "earliest_time": "-70m@m",
    "latest_time": "-10m@m"
  },
  "search": "| tstats `summariesonly` values(DNS.answer) as IPs min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query | `drop_dm_object_name(\"DNS\")` | `ctime(firstTime)`| `brand_abuse_dns`",
  "search_description": "This search looks for DNS requests for faux domains similar to the domains that you want to have monitored for abuse.",
  "search_id": "24dd17b1-e2fb-4c31-878c-d4f746595bfa",
  "search_name": "Monitor DNS For Brand Abuse",
  "search_type": "detection",
  "security_domain": "network",
  "spec_version": 1,
  "version": "1.0"
}
