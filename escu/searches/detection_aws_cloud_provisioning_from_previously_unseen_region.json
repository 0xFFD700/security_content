{
  "asset_type": "AWS Instance",
  "channel": "ESCU",
  "confidence": "medium",
  "correlation_rule": {
    "notable": {
      "nes_fields": "src_ip, Region",
      "rule_description": "Your AWS infrastructure was provisioned from a region, $Region$, which has never before been seen provisioning your infrastructure.",
      "rule_title": "AWS Provision Activity From $region$"
    },
    "risk": {
      "risk_object": "dest",
      "risk_object_type": [
        "system"
      ],
      "risk_score": 30
    },
    "suppress": {
      "suppress_fields": "dest",
      "suppress_period": "14400s"
    }
  },
  "creation_date": "2018-03-16",
  "data_metadata": {
    "data_source": [
      "AWS CloudTrail"
    ],
    "data_sourcetypes": [
      "aws:cloudtrail"
    ],
    "providing_technologies": [
      "AWS"
    ]
  },
  "eli5": "The subsearch returns all events with event names that start with \"Run\" or \"Create,\" and then does a <code>GeoIP</code> lookup on the IP address that initiated the action within the last hour. It appends the historical data to those results in the lookup file. Next, it recalculates the <code>firstTime</code> and <code>lastTime</code> field for each country, region, city, and IP address and outputs this data to the lookup file to update the local cache. It then calculates the <code>firstTime</code> and <code>lastTime</code> for each city. It returns only those events from regions that have first been seen in the past hour. This is combined with the main search to return the time, user, IP address, city, event name, and error code from the action.",
  "how_to_implement": "You must install the AWS App for Splunk (version 5.1.0 or later) and Splunk Add-on for AWS (version 4.4.0 or later), then configure your CloudTrail inputs. This search works best when you run the \"Previously Seen AWS Provisioning Activity Sources\" support search once to create a history of previously seen locations that have provisioned AWS resources.",
  "known_false_positives": "This is a strictly behavioral search, so we define \"false positive\" slightly differently. Every time this fires, it will accurately reflect the first occurrence in the time period you're searching within, plus what is stored in the cache feature. But while there are really no \"false positives\" in a traditional sense, there is definitely lots of noise.<br/><br/> This search will fire any time a new region is seen in the <b>GeoIP</b> database for any kind of provisioning activity. If you typically do all provisioning from tools inside of your region, there should be few false positives. If you are located in regions where the free version of <b>MaxMind GeoIP</b> that ships by default with Splunk has weak resolution (particularly small countries in less economically powerful regions), this may be much less valuable to you.",
  "maintainers": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "mappings": {
    "cis20": [
      "CIS 1"
    ],
    "nist": [
      "ID.AM"
    ]
  },
  "modification_date": "2018-03-16",
  "original_authors": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "scheduling": {
    "cron_schedule": "0 * * * *",
    "earliest_time": "-70m@m",
    "latest_time": "-10m@m"
  },
  "search": "sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Region=* [search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Region=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by Region | eval newRegion=if(firstTime >= relative_time(now(), \"-70m@m\"), 1, 0) | where newRegion=1 | table Region] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, Region, eventName, errorCode",
  "search_description": "This search looks for AWS provisioning activities from previously unseen regions. Region in this context is similar to a state in the United States. Provisioning activities are defined broadly as any event that begins with \"Run\" or \"Create.\"",
  "search_id": "7971d3df-da82-4648-a6e5-b5637bea5253",
  "search_name": "AWS Cloud Provisioning From Previously Unseen Region",
  "search_type": "detection",
  "security_domain": "endpoint",
  "spec_version": 1,
  "version": "1.0"
}
