{
  "asset_type": "Endpoint",
  "channel": "ESCU",
  "confidence": "high",
  "correlation_rule": {
    "notable": {
      "nes_fields": "src_user, message_id",
      "rule_description": "The sender $src_user$ has sent an email from a similar domain to that which you are monitoring for brand abuse.",
      "rule_title": "Possible Brand Abuse from $src_user$"
    },
    "risk": {
      "risk_object": "src_user",
      "risk_object_type": [
        "user"
      ],
      "risk_score": 80
    },
    "suppress": {
      "suppress_fields": "message_id, src_user",
      "suppress_period": "86400s"
    }
  },
  "creation_date": "2017-06-01",
  "data_metadata": {
    "data_models": [
      "Email"
    ],
    "data_source": [
      "Email"
    ],
    "providing_technologies": [
      "Microsoft Exchange",
      "Bro",
      "Splunk Stream"
    ]
  },
  "eli5": "This search looks at the sender address in email headers, and identifies those with a sender address using a domain name that matches the list of permutations generated for the domain you want to monitor.",
  "how_to_implement": "You need to ingest email header data. Specifically the sender's address (src_user) must be populated.  You also need to have run the search \"ESCU - DNSTwist Domain Names\", which creates the permutations of the domain that will be checked for.",
  "known_false_positives": "None at this time",
  "maintainers": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "mappings": {
    "cis20": [
      "CIS 7"
    ],
    "kill_chain_phases": [
      "Delivery"
    ],
    "nist": [
      "PR.IP"
    ]
  },
  "modification_date": "2018-01-05",
  "original_authors": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "scheduling": {
    "cron_schedule": "0 * * * *",
    "earliest_time": "-70m@m",
    "latest_time": "-10m@m"
  },
  "search": "| tstats `summariesonly` values(All_Email.recipient) as recipients, min(_time) as firstTime, max(_time) as lastTime from datamodel=Email by All_Email.src_user, All_Email.message_id | `drop_dm_object_name(\"All_Email\")` | `ctime(firstTime)` | `ctime(lastTime)` | eval temp=split(src_user, \"@\") | eval email_domain=mvindex(temp, 1) | lookup update=true brandMonitoring_lookup domain as email_domain OUTPUT domain_abuse | search domain_abuse=true | table message_id, src_user, email_domain, recipients, firstTime, lastTime",
  "search_description": "This search looks for emails claiming to be sent from a domain similar to one that you want to have monitored for abuse.",
  "search_id": "b2ea1f38-3a3e-4b8a-9cf1-82760d86a6b8",
  "search_name": "Monitor Email For Brand Abuse",
  "search_type": "detection",
  "security_domain": "network",
  "spec_version": 1,
  "version": "2.0"
}
