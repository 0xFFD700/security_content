{
  "asset_type": "Endpoint",
  "channel": "ESCU",
  "confidence": "high",
  "correlation_rule": {
    "notable": {
      "nes_fields": "src, url",
      "rule_description": "The host $src$ connected to a web site with a domain similar to that which you are monitoring for brand abuse.",
      "rule_title": "Web URL Brand Abuse from $src$"
    },
    "risk": {
      "risk_object": "src",
      "risk_object_type": [
        "system"
      ],
      "risk_score": 80
    },
    "suppress": {
      "suppress_fields": "src",
      "suppress_period": "86400s"
    }
  },
  "creation_date": "2017-06-01",
  "data_metadata": {
    "data_models": [
      "Web"
    ],
    "data_source": [
      "Web Traffic"
    ],
    "providing_technologies": [
      "Splunk Stream",
      "Bro",
      "Bluecoat",
      "Palo Alto Firewall"
    ]
  },
  "eli5": "This search looks at all the URLs an endpoint is connecting to and then checks the URL against a list of faux domains that could be indicative of brand abuse.",
  "how_to_implement": "You need to ingest data from your web traffic. This can be accomplished by indexing data from a web proxy, or using a network traffic analysis tool, such as Bro or Splunk Stream. You also need to have run the search \"ESCU - DNSTwist Domain Names\", which creates the permutations of the domain that will be checked for.",
  "known_false_positives": "None at this time",
  "maintainers": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "mappings": {
    "cis20": [
      "CIS 7"
    ],
    "kill_chain_phases": [
      "Delivery"
    ],
    "mitre_attack": [],
    "nist": [
      "PR.IP"
    ]
  },
  "modification_date": "2017-09-23",
  "original_authors": [
    {
      "company": "Splunk",
      "email": "davidd@splunk.com",
      "name": "David Dorsey"
    }
  ],
  "scheduling": {
    "cron_schedule": "0 * * * *",
    "earliest_time": "-70m@m",
    "latest_time": "-10m@m"
  },
  "search": "| tstats `summariesonly` values(Web.url) as urls min(_time) as firstTime from datamodel=Web by Web.src | `drop_dm_object_name(\"Web\")` | `ctime(firstTime)` | `brand_abuse_web`",
  "search_description": "This search looks for Web requests to faux domains similar to the one that you want to have monitored for abuse.",
  "search_id": "134da869-e264-4a8f-8d7e-fcd0ec88f301",
  "search_name": "Monitor Web Traffic For Brand Abuse",
  "search_type": "detection",
  "security_domain": "network",
  "spec_version": 1,
  "version": "1.0"
}
