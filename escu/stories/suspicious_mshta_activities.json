{
  "category": "Adversary Tactics",
  "channel": "ESCU",
  "creation_date": "2018-08-07",
  "description": "Monitor and detect techniques used by attackers who leverage the mshta.exe process to execute malicious code.",
  "id": "2b1800dd-92f9-47dd-a981-fdf13w1q5d55",
  "maintainers": [
    {
      "company": "Splunk",
      "email": "bpatel@splunk.com",
      "name": "Bhavin Patel"
    }
  ],
  "modification_date": "2018-08-07",
  "name": "Suspicious MSHTA Activity",
  "narrative": "One common adversary tactic is to bypass application white-listing solutions via the mshta.exe process, which executes Microsoft HTML applications with the .hta suffix. In these cases, attackers use the trusted Windows utility to eproxy execution of malicious files, whether an .hta application, javascript, or VBScript.<br></br>One example of a notable mshta.exe attack was the Kovter malware (https://medium.com/@mbromileyDFIR/malware-monday-aebb456356c5) that was implicated in ransomware and click-fraud attacks. Kovter utilized .hta to execute a series of javascript commands, each progressively more dangerous. According to the Mitre Parternship Network (https://attack.mitre.org/wiki/Technique/T1170), FIN7 has leveraged mshta.exe, as has the MuddyWater group, who used it to execute its POWERSTATS payload (which then used the utility to execute additional payloads).<br></br>The searches in this story help you detect and investigate suspicious activity that may indicate that an attacker is leveraging mshta.exe to execute malicious code.",
  "original_authors": [
    {
      "company": "Splunk",
      "email": "bpatel@splunk.com",
      "name": "Bhavin Patel"
    }
  ],
  "references": [
    "https://redcanary.com/blog/windows-registry-attacks-threat-detection/",
    "https://medium.com/@mbromileyDFIR/malware-monday-aebb456356c5",
    "https://attack.mitre.org/wiki/Technique/T1170"
  ],
  "searches": {
    "contextual_searches": [
      "Get Notable History",
      "Get User Information from Identity Table",
      "Get Authentication Logs For Endpoint",
      "Get Risk Modifiers For User",
      "Get Risk Modifiers For Endpoint"
    ],
    "detection_searches": [
      "Detect mshta.exe running scripts in command-line arguments",
      "Registry Keys Used For Persistence",
      "Detect Prohibited Applications Spawning cmd.exe"
    ],
    "investigative_searches": [
      "Get Process Info",
      "Get Registry Activities",
      "Get Parent Process Info"
    ],
    "support_searches": []
  },
  "spec_version": 1,
  "version": "1.0"
}
